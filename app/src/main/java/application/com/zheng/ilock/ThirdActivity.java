package application.com.zheng.ilock;


import android.graphics.Color;
import android.graphics.Rect;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.content.Intent;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.view.GestureDetector;
import android.view.MotionEvent;
import android.widget.Toast;
import android.view.GestureDetector.OnGestureListener;
public class ThirdActivity extends AppCompatActivity implements OnGestureListener {

    GestureDetector detector;

    int top, bottom, Height, Width, start, end;
    boolean correct = false;
    static int passLength = 6;
    static int[] sequence = new int[passLength];
    int count = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        detector = new GestureDetector(this, this);
        setContentView(R.layout.activity_third);

//        SharedPreferences mSettings = PreferenceManager.getDefaultSharedPreferences(this);
//        SharedPreferences.Editor editor = mSettings.edit();

//        int id = 1;
//        String savedcode = "121212";
//        editor.putString("SavedCode", savedcode);
//        editor.putInt("id", id);
//        editor.apply();

//        final Button button1 = (Button) findViewById(R.id.button3);
//        button1.setOnClickListener(new View.OnClickListener(){
//            @Override
//            public void onClick(View v) {
//
////                goToSecondActivity();
////                TextView myText = (TextView) findViewById(R.id.button1);
////                myText.setText("Your Text here");
//                sequence[count] = 1;
//                if (count+1 == passLength){
//                    done();
//                    count =0;
//                }else {
//                    count++;
//                }
//
//            }
//
//
//        });
//
//        final Button button2 = (Button) findViewById(R.id.button4);
//        button2.setOnClickListener(new View.OnClickListener(){
//            @Override
//            public void onClick(View v) {
//
////                goToSecondActivity();
////                TextView myText = (TextView) findViewById(R.id.button1);
////                myText.setText("Your Text here");
//                sequence[count] = 2;
//                if (count+1 == passLength){
//                    done();
//                    count =0;
//                }else {
//                    count++;
//                }
//            }
//        });

    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
        System.out.println("onTouchEvent "+event);
        ImageView img = (ImageView) findViewById(R.id.imageView);
//        if(event.getAction()==MotionEvent.ACTION_DOWN){
//            img.setColorFilter(Color.argb(50, 0, 0, 0));
//        }else if(event.getAction()==MotionEvent.ACTION_UP){
//            img.setColorFilter(Color.argb(0, 0, 0, 0));
//        }
        top = img.getTop();
        bottom = img.getBottom();
        start = img.getLeft();
        end = img.getRight();
        Height = img.getHeight();
        Width = img.getWidth();
        return detector.onTouchEvent(event);
    }

    @Override
    public boolean onDown(MotionEvent e) {
//        Toast.makeText(getApplicationContext(), "OnDown Gesture", Toast.LENGTH_SHORT).show();
        System.out.println("onDown "+e);
        return false;
    }

//    @Override
//    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
//        Toast.makeText(getApplicationContext(), "Fling Gesture", Toast.LENGTH_SHORT).show();
//        System.out.println("onFling "+e1 +"; "+e2);
//        return true;
//    }

    @Override
    public void onLongPress(MotionEvent e) {
        System.out.println("onLongPress "+e);
//        Toast.makeText(getApplicationContext(), "Long Press Gesture", Toast.LENGTH_SHORT).show();
    }

    @Override
    public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {
//        Toast.makeText(getApplicationContext(), "Scroll Gesture", Toast.LENGTH_SHORT).show();
        System.out.println("onScroll "+e1 +"; "+e2);
        return false;
    }

    @Override
    public void onShowPress(MotionEvent e) {
        System.out.println("onShowPress "+e);
//        Toast.makeText(getApplicationContext(), "Show Press Gesture", Toast.LENGTH_SHORT).show();
    }

    @Override
    public boolean onSingleTapUp(MotionEvent e) {
        changeColor();
        System.out.println("onSingleTapUp "+e);
        if(e.getX()<=end && e.getX()>= start && e.getY()<(top+(Height/2)) && e.getY()>top){
            System.out.println("BUTTON 1");
            sequence[count] = 1;
            if (count+1 == passLength){
                done();
                count =0;
                changeColor();
            }else {
                count++;
                changeColor();
            }
        }else if(e.getX()<=end && e.getX()>= start && e.getY()<bottom && e.getY()>(top+(Height/2))){
            System.out.println("BUTTON 2");
            sequence[count] = 2;
            if (count+1 == passLength){
                done();
                count =0;
                changeColor();
            }else {
                count++;
                changeColor();
            }
        }
//        Toast.makeText(getApplicationContext(), "Single Tap Gesture", Toast.LENGTH_SHORT).show();
        return true;
    }
    @Override
    public boolean onFling(MotionEvent motionEvent1, MotionEvent motionEvent2, float X, float Y) {


        if(motionEvent1.getX()<=end && motionEvent1.getX()>= start && motionEvent1.getY()<bottom && motionEvent1.getY()>top) {
            if (motionEvent1.getY() - motionEvent2.getY() > 50) {

                System.out.println("Swipe up!");
                sequence[count] = 4;
                if (count + 1 == passLength) {
                    done();
                    count = 0;
                    changeColor();
                } else {
                    count++;
                    changeColor();
                }

                return true;
            }

            if (motionEvent2.getY() - motionEvent1.getY() > 50) {

                System.out.println("Swipe down!");
                sequence[count] = 3;
                if (count + 1 == passLength) {
                    done();
                    count = 0;
                    changeColor();
                } else {
                    count++;
                    changeColor();
                }
                return true;
            }
            else {
                System.out.println("Swipe MORE");

                return true ;
            }
        }else{
            System.out.println("touch the window");
            return true;
        }

//        if(motionEvent1.getX() - motionEvent2.getX() > 50){
//
//            Toast.makeText(MainActivity.this , " Swipe Left " , Toast.LENGTH_LONG).show();
//
//            return true;
//        }
//
//        if(motionEvent2.getX() - motionEvent1.getX() > 50) {
//
//            Toast.makeText(MainActivity.this, " Swipe Right ", Toast.LENGTH_LONG).show();
//
//            return true;
//        }

    }


    public void showSimplePopUp(String string) {

        AlertDialog.Builder helpBuilder = new AlertDialog.Builder(this);
        helpBuilder.setTitle("");
        helpBuilder.setMessage(string);
        helpBuilder.setPositiveButton("Ok",
                new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int which) {
                        // Do nothing but close the dialog
                    }
                });

        // Remember, create doesn't show the dialog
        AlertDialog helpDialog = helpBuilder.create();
        helpDialog.show();
    }

    public void done(){
        String passcode = "";
        for (int i = 0; i<passLength; i++){
            passcode = passcode.concat(String.valueOf(sequence[i]));
        }
        SharedPreferences check = PreferenceManager.getDefaultSharedPreferences(this);
        String realcode = check.getString("SavedCode", "missing");




































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































        if (passcode.equals(realcode)) {

            showSimplePopUp("set new password");
            TextView myText = (TextView) findViewById(R.id.statusText);
            myText.setText("Type your new password:");
            correct = true;

        }else if(correct==true){
            SharedPreferences.Editor editor = check.edit();
            int id = 1;
            editor.putString("SavedCode", passcode);
            editor.putInt("id", id);
            editor.apply();
            correct = false;
            showSimplePopUp("Passcode changed");
            goToFirstActivity();
        }else{
            showSimplePopUp("Wrong Password, Please try again.");
        }
    }
    public void goToFirstActivity() {

        Intent intent = new Intent(this, MainActivity.class);

        startActivity(intent);

    }

    public void changeColor(){
        ImageView backgroundImg = (ImageView) findViewById(R.id.imageView);
        switch(count){
            case 0:
//                backgroundImg.setBackgroundColor(Color.argb(100, 100, 0, 0));
                backgroundImg.setImageResource(R.drawable.screen1);
                break;
            case 1:
//                backgroundImg.setBackgroundColor(Color.argb(100, 100, 40, 20));
                backgroundImg.setImageResource(R.drawable.screen2);
                break;
            case 2:
//                backgroundImg.setBackgroundColor(Color.argb(100, 70, 70, 20));
                backgroundImg.setImageResource(R.drawable.screen3);
                break;
            case 3:
//                backgroundImg.setBackgroundColor(Color.argb(100, 100, 100, 0));
                backgroundImg.setImageResource(R.drawable.screen4);
                break;
            case 4:
//                backgroundImg.setBackgroundColor(Color.argb(100, 60, 100, 0));
                backgroundImg.setImageResource(R.drawable.screen5);
                break;
            case 5:
//                backgroundImg.setBackgroundColor(Color.argb(100, 0, 100, 20));
                backgroundImg.setImageResource(R.drawable.screen6);
                break;
        }

    }
}
